{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.js","webpack:///./src/engine/Engine.js","webpack:///./src/engine/EventEmitter.js","webpack:///./src/engine/BaseTile.js","webpack:///./src/game/tiles/BaseBuilding.js","webpack:///./src/game/tiles/FieldTile.js","webpack:///./src/game/tiles/index.js","webpack:///./src/game/tiles/GrassTile.js","webpack:///./src/engine/State.js","webpack:///./src/engine/Viewport.js","webpack:///./src/engine/EventQueue.js","webpack:///./src/engine/Layer.js","webpack:///./src/engine/BaseInput.js","webpack:///./src/engine/Keyboard.js","webpack:///./src/engine/Touch.js","webpack:///./src/engine/Tileset.js","webpack:///./src/engine/UI.js","webpack:///./src/engine/Loader.js","webpack:///./src/engine/BaseWorld.js","webpack:///./src/game/City.js","webpack:///./src/game/World.js","webpack:///./src/engine/BaseElement.js","webpack:///./src/game/components/CityHeader.js","webpack:///./src/game/components/BuildingsMenu.js","webpack:///./src/game/components/BuildingPanel.js","webpack:///./src/game/config.js","webpack:///./src/index.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","ConsoleExtra","console","counts","timestamps","limited","Object","create","__getCallID","skip","stack","Error","lines","split","found","offset","match","method","key","id","this","__id","timestamp","now","Date","__throttle","count","__limit","that","consoleExtras","apply","arguments","times","n","ret","throttle","time","Infinity","window","Engine","config","_classCallCheck","_delta","_previousTimestamp","_updateTime","_updateTimeStep","updateTimeStep","_updateTimeMax","updateTimeMax","world","fps","debug","_this","Promise","all","load","then","results","init","requestAnimationFrame","tick","bind","warn","concat","update","render","params","delta","draw","_drawCellNumbers","_drawGrid","_drawDebug","context","viewport","tileSize","tilesets","x","y","r","_this$world$viewport$2","_slicedToArray","getRect","startCol","endCol","startRow","endRow","strokeStyle","tileOffsetX","offsetX","tileOffsetY","offsetY","c","strokeRect","mapCols","layers","getSize","_this$world$viewport$4","num","fillStyle","font","fillText","fillRect","EventEmitter","EventEmitter_classCallCheck","_eventHandlers","Map","event","callback","thisArg","has","set","get","push","handlers","length","index","findIndex","handler","splice","_len","args","Array","_key","reduce","emitted","BaseTile","BaseTile_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","name","component","_state","_closed","newState","assign","state","setState","_attachHandlers","classList","remove","_detachHandlers","add","getState","BaseBuilding","BaseBuilding_classCallCheck","BaseBuilding_possibleConstructorReturn","BaseBuilding_getPrototypeOf","cost","production","icon","begin","end","paused","workers","maxWorkers","pause","_objectSpread","_get","prototype","previousTimestamp","undefined","reset","resume","FieldTile","FieldTile_classCallCheck","info","JSON","parse","stringify","FieldTile_possibleConstructorReturn","FieldTile_getPrototypeOf","food","wood","image","picture","description","information","abilities","FieldTile_get","addEventListener","_handleClose","_handleAddWorker","_handleRemoveWorker","_handleAbility","removeEventListener","stopPropagation","emit","building","ability","detail","Grass","GrassTile","GrassTile_classCallCheck","GrassTile_possibleConstructorReturn","GrassTile_getPrototypeOf","menuItems","GrassTile_get","_handleBuild","Building","Field","State","State_classCallCheck","rows","cols","stateMap","_initStates","log","layer","col","row","Viewport","Viewport_classCallCheck","canvas","getContext","width","height","worldWidth","worldHeight","startX","startY","style","zIndex","Math","min","_ref2","Viewport_slicedToArray","_ref","max","source","drawImage","clearRect","EventQueue","EventQueue_classCallCheck","_events","data","EventQueue_objectSpread","shift","find","filter","Layer","Layer_classCallCheck","level","tileMap","map","tileset","queue","_dirty","selectedTile","_this$getSize2","Layer_slicedToArray","document","createElement","join","_this$getSize4","tileSetCols","tileID","srcX","srcY","getTileID","lineWidth","pixel","BaseInput","BaseInput_classCallCheck","speed","_this$getDirection2","BaseInput_slicedToArray","getDirection","_this$getDirection4","Keyboard","Keyboard_classCallCheck","Keyboard_possibleConstructorReturn","Keyboard_getPrototypeOf","listeners","LEFT","RIGHT","UP","DOWN","_keys","_initListeners","keyCodes","_this2","_onKeyDown","_onKeyUp","forEach","keyCode","preventDefault","_isDown","Touch","Touch_classCallCheck","Touch_possibleConstructorReturn","Touch_getPrototypeOf","currX","currY","endX","endY","_onTouchStart","passive","_onTouchMove","_onTouchEnd","_onTouchCancel","touches","pageX","target","offsetLeft","pageY","offsetTop","changedTouches","deltaX","deltaY","Tileset","Tileset_classCallCheck","path","loader","size","_initImage","_initCanvas","loadImage","Tileset_slicedToArray","getImage","UI","UI_classCallCheck","UI_getPrototypeOf","element","components","currentTile","currentComponent","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","value","appendChild","err","return","_onClick","UI_assertThisInitialized","layerX","layerY","tile","isMounted","on","_handleComponentClose","open","close","off","Loader","Loader_classCallCheck","_images","src","img","Image","p","resolve","reject","BaseWorld","BaseWorld_classCallCheck","container","City","City_classCallCheck","City_possibleConstructorReturn","City_getPrototypeOf","ui","resources","rock","population","buildings","_initHeader","elem","position","spend","total","produced","produce","_i","_Object$keys","keys","resource","gain","amount","affordable","_i2","_Object$keys2","canAfford","_i3","_Object$keys3","updateHeader","_i4","_Object$keys4","bInfo","assignWorker","removeWorker","World","World_classCallCheck","World_possibleConstructorReturn","World_getPrototypeOf","World_objectSpread","input","keyboard","touch","layerMap","_this$layers$0$getSiz2","World_slicedToArray","tiles","city","root","resize","_handleResize","_handleUIClick","_handleUIOpen","_handleUIClose","isMoving","move","getDistance","clear","_this$viewport$canvas2","canvasToWorldPosition","tileInstance","getBuildingAt","getTileState","_ref3","tState","setSelection","_handleTileBuild","_handleBuildingAddWorker","_handleBuildingRemoveWorker","_handleBuildingAbility","_ref4","clearSelection","_ref5","build","bState","setTileState","setTileID","_ref6","_ref7","documentElement","clientWidth","innerWidth","clientHeight","innerHeight","BaseElement","BaseElement_classCallCheck","BaseElement_possibleConstructorReturn","BaseElement_getPrototypeOf","HTMLElement","CityHeader","CityHeader_classCallCheck","CityHeader_possibleConstructorReturn","CityHeader_getPrototypeOf","attachShadow","mode","templateClone","getElementById","content","cloneNode","shadowRoot","list","querySelector","lastChild","removeChild","res","innerText","charAt","toUpperCase","customElements","define","e","error","BuildingsMenu","BuildingsMenu_classCallCheck","BuildingsMenu_possibleConstructorReturn","BuildingsMenu_getPrototypeOf","_handlers","dispatchEvent","CustomEvent","_loop","listItem","card","cardHeader","cardBody","display","background","backgroundPosition","cardFooter","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_step2$value","BuildingsMenu_slicedToArray","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_step3$value","BuildingPanel","BuildingPanel_classCallCheck","BuildingPanel_possibleConstructorReturn","BuildingPanel_getPrototypeOf","point","item","text","BuildingPanel_slicedToArray","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_step4$value","engine","getElementsByClassName","run","d","getter","o","defineProperty","enumerable","toStringTag","t","__esModule","ns","object","property","hasOwnProperty","s"],"mappings":"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AG,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAM,EAAK,EAAI,GAAM,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC9E,CAAG,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC9E,CAAG,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC9E,CAAG,GAAM,EAAK,EAAK,EAAK,EAAK,EAAI,GAAM,EAAK,EAAI,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,IAC9E,CAAG,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,IAC9E,CAAG,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,IAC9E,CAAG,GAAM,EAAK,EAAI,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,IAC9E,CAAG,GAAM,EAAK,EAAK,EAAK,EAAK,EAAI,GAAM,EAAK,EAAK,EAAK,EAAI,GAAM,EAAK,EAAK,EAAI,IAC9E,CAAG,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KAEhF,CACE,CAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK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","file":"app.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Console rate limiting, unique per line of originating code.\n *\n * console.times(n) - Only runs n times\n * console.throttle(time) - Only runs once every time milliseconds.\n *\n * Each returns a console object whose methods are rate limited.\n *\n * credits: Steven Wittens, https://github.com/unconed/console-extras.js\n *\n * @param {Object} console - Usually `window.console`\n */\nfunction ConsoleExtra (console) {\n  const counts = {}\n  const timestamps = {}\n\n  // Create replacement console class\n  const limited = Object.create(console)\n\n  // Get unique ID per call based on stack trace\n  console.__getCallID = function (skip) {\n    const stack = new Error().stack\n    if (stack) {\n      const lines = stack.split(/\\n/g)\n      let found = false\n      let offset = 0\n\n      skip++ // skip self\n\n      for (const i in lines) {\n        if (offset === skip) {\n          return lines[i]\n        }\n        if (!found && lines[i].match(/getCallID/)) {\n          found = true\n        }\n        if (found) {\n          offset++\n        }\n      }\n    }\n\n    return 'exception'\n  }\n\n  // Prepare limited versions of all console methods.\n  for (const i in console) {\n    (function (method, key) {\n      limited[key] = function () {\n        const id = this.__id\n\n        // Once every x ms\n        const timestamp = timestamps[id] || 0\n        const now = +new Date()\n        if ((now - timestamp) >= this.__throttle) {\n          timestamps[id] = now\n\n          // Up to n times\n          const count = counts[id] || 0\n          if (count < this.__limit) {\n            counts[id] = count + 1\n\n            const that = console[key].consoleExtras ? this : console\n            console[key].apply(that, arguments)\n          }\n        }\n\n        return this\n      }\n    })(console[i], i)\n  }\n\n  // Add .times() to console.\n  console.times = function (n) {\n    const ret = Object.create(limited)\n    ret.__id = this.__id || console.__getCallID(1)\n    ret.__limit = n\n    ret.__throttle = this.__throttle || 0\n    return ret\n  }\n  console.times.consoleExtras = true\n\n  // Add .throttle() to console.\n  console.throttle = function (time) {\n    const ret = Object.create(limited)\n    ret.__id = this.__id || console.__getCallID(1)\n    ret.__limit = this.__limit || Infinity\n    ret.__throttle = time\n    return ret\n  }\n  console.throttle.consoleExtras = true\n\n  return console\n}\n\n/**\n * Filter an array in-place.\n *\n * Works by overwriting elements in the array with the\n * elements to keep and changing the `length` property.\n *\n * credits: https://stackoverflow.com/a/16491790/2270403\n *\n * NOTE: this was used to remove all equal event listeners in EventEmitter class\n *       now it removes only the first found\n *\n * @param {Array} array\n * @param {Function} predicate - Return `true` to keep, `false` to remove, the current element\n * @returns {Number} - Number of removed elements\n */\nconst filterInPlace = (array, predicate) => {\n  /* eslint-disable one-var */\n\n  let end = 0, value = null\n\n  for (let i = 0, max = array.length; i < max; i++) {\n    value = array[i]\n\n    if (predicate(value)) {\n      array[end] = value\n      end++\n    }\n  }\n\n  const removed = array.length - end\n  array.length = end\n\n  return removed\n}\n\nexport { ConsoleExtra, filterInPlace }\n","import { ConsoleExtra } from '../utils.js'\n\nconst console = ConsoleExtra(window.console)\n\n/**\n * Engine core class, manages all components.\n *\n * To avoid movement and refresh rate problems, the `update()`\n * function is called in fixed steps of time instead that once\n * per frame, which also improves simulation consistency.\n * Time for the `update()` function is accumulated each tick\n * and used once it reaches a threshold. Accumulated time is\n * clamped to a max value, to prevent the \"spiral of death\".\n * See {@link Engine#constructor} to change these parameters.\n *\n * You need to extend this class and override loop methods.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class Engine {\n  /* eslint-disable no-multi-spaces, one-var */\n\n  /**\n   * @param {Object} config - Engine component configuration\n   * @param {Number} [config.updateTimeStep=10] - Single step `update()` time (int, ms)\n   * @param {Number} [config.updateTimeMax=50] - Max accumulated `update()` time (int, ms)\n   * @param {BaseWorld} config.world - {@link BaseWorld} implementation instance\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    // time related\n    this._delta             = 0\n    this._previousTimestamp = 0\n    this._updateTime        = 0\n    this._updateTimeStep    = config.updateTimeStep || 10\n    this._updateTimeMax     = config.updateTimeMax || 50\n\n    // components related\n    this.world              = config.world\n\n    // other\n    this.fps                = 0\n    this.debug              = config.debug || false\n  }\n\n  /**\n   * Start the game engine loop:\n   * 1. load\n   * 2. init\n   * 3. start loop\n   *\n   * @returns {Promise}\n   */\n  run () {\n    return Promise.all(this.load())\n      .then((results) => {\n        this.init(results)\n        window.requestAnimationFrame(this.tick.bind(this))\n      })\n  }\n\n  /**\n   * Executes a tick of the game:\n   * 1. clear frame\n   * 2. compute delta\n   * 3. update by fixed steps\n   * 4. render\n   *\n   * @param {Number} timestamp\n   */\n  tick (timestamp) {\n    // compute delta\n    timestamp = timestamp | 0\n    this._delta = timestamp - this._previousTimestamp\n    this._previousTimestamp = timestamp\n    this._updateTime += this._delta\n\n    // avoid spiral of death\n    if (this._updateTime > this._updateTimeMax) {\n      if (this.debug) {\n        console.throttle(1000).warn(`[ENGINE] update time above threshold ${this._updateTime}, clamping to ${this._updateTimeMax}`)\n      }\n\n      this._updateTime = this._updateTimeMax\n    }\n\n    // stats\n    this.fps = 1000 / this._delta | 0\n\n    // update by fixed steps\n    while (this._updateTime >= this._updateTimeStep) {\n      this.update(this._updateTimeStep, timestamp)\n      this._updateTime -= this._updateTimeStep\n      timestamp += this._updateTimeStep\n    }\n\n    this.render()\n    window.requestAnimationFrame(this.tick.bind(this))\n  }\n\n  /**\n   * Pre-load resources.\n   *\n   * @returns {Promise<String>[]} - Cache keys of the loaded images, passed down to {@link Engine#init}\n   */\n  load () {\n    return this.world.load()\n  }\n\n  /**\n   * Initialize Engine and components.\n   *\n   * @param {Object} params - Results returned from {@link Engine#load}\n   */\n  init (params) {\n    this.world.init()\n  }\n\n  /**\n   * Update game status.\n   *\n   * @param {Number} delta - Time since last update (int, ms)\n   * @param {Number} timestamp - Time since start (int, ms)\n   */\n  update (delta, timestamp) {\n    this.world.update(delta, timestamp)\n  }\n\n  /**\n   * Render current world position.\n   */\n  render () {\n    this.world.draw()\n\n    if (this.debug > 2) {\n      this._drawCellNumbers()\n    }\n    if (this.debug > 1) {\n      this._drawGrid()\n    }\n    if (this.debug) {\n      this._drawDebug()\n    }\n  }\n\n  /**\n   * Draw a grid on top of the game map.\n   * This is a debug function.\n   *\n   * @private\n   */\n  _drawGrid () {\n    const context = this.world.viewport.context\n    const tileSize = this.world.tilesets[0].tileSize\n    let x = 0, y = 0, r = 0\n    const [startCol, endCol, startRow, endRow] = this.world.viewport.getRect(tileSize)\n    context.strokeStyle = 'black'\n    const tileOffsetX = startCol * tileSize - this.world.viewport.offsetX\n    const tileOffsetY = startRow * tileSize - this.world.viewport.offsetY\n\n    for (let c = startCol; c <= endCol; c++) {\n      for (r = startRow; r <= endRow; r++) {\n        x = (c - startCol) * tileSize + tileOffsetX\n        y = (r - startRow) * tileSize + tileOffsetY\n\n        context.strokeRect(\n          x | 0,    // target X\n          y | 0,    // target Y\n          tileSize, // target width\n          tileSize  // target height\n        )\n      }\n    }\n  }\n\n  /**\n   * Draw cell rows and columns on top of game map.\n   * This is a debug function.\n   *\n   * @private\n   */\n  _drawCellNumbers () {\n    const context = this.world.viewport.context\n    const tileSize = this.world.tilesets[0].tileSize\n    const mapCols = this.world.layers[0].getSize()[0]\n    const [startCol, endCol, startRow, endRow] = this.world.viewport.getRect(tileSize)\n    const tileOffsetX = startCol * tileSize - this.world.viewport.offsetX\n    const tileOffsetY = startRow * tileSize - this.world.viewport.offsetY\n    let x = 0, y = 0, c = 0, num = 0\n    context.fillStyle = 'black'\n    context.font = '16px sans-serif'\n\n    for (let r = startRow; r <= endRow; r++) {\n      for (c = startCol; c <= endCol; c++) {\n        x = (c - startCol) * tileSize + tileOffsetX + tileSize / 8 // it's a long text\n        y = (r - startRow) * tileSize + tileOffsetY + tileSize / 2\n        num = (r * mapCols) + (c + 1)\n\n        context.fillText(\n          `[ ${num} (${c + ' | ' + r}) ]`,\n          x | 0,\n          y | 0,\n          tileSize * 3 / 4 // max width, font auto-scale\n        )\n      }\n    }\n  }\n\n  /**\n   * Draw rendering info.\n   * This is a debug function.\n   *\n   * @private\n   */\n  _drawDebug () {\n    const context = this.world.viewport.context\n\n    context.fillStyle = 'black'\n    context.fillRect(\n      10, // x\n      10, // y\n      80, // width\n      40  // height\n    )\n    context.fillStyle = 'white'\n\n    // FPS\n    context.fillText(\n      `FPS: ${this.fps}`,\n      15, // x\n      25  // y\n    )\n\n    // delta\n    context.fillText(\n      `Δ: ${this._delta}ms`,\n      15,  // x\n      45   // y\n    )\n  }\n}\n","/**\n * This allows for event-driven programming.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class EventEmitter {\n  constructor () {\n    this._eventHandlers = new Map()\n  }\n\n  /**\n   * Add event handler.\n   *\n   * @param {String} event - Name of the event\n   * @param {Function} callback - Function to execute on event\n   * @param {Object} thisArg - Context for the callback\n   * @returns {EventEmitter} - Instance of this `EventEmitter`, for chaining\n   */\n  on (event, callback, thisArg) {\n    this._eventHandlers.has(event) || this._eventHandlers.set(event, [])\n    this._eventHandlers.get(event).push({\n      callback,\n      this: thisArg\n    })\n\n    return this\n  }\n\n  /**\n   * Remove event handler.\n   * Arguments must be the same as used when registering the handler.\n   *\n   * @param {String} event - Name of the event\n   * @param {Function} callback - Function to be removed\n   * @param {Object} thisArg - Context of the callback\n   * @returns {Boolean} - `false` if the handler is not found\n   */\n  off (event, callback, thisArg) {\n    const handlers = this._eventHandlers.get(event)\n\n    if (handlers && handlers.length) {\n      const index = handlers.findIndex((handler) => {\n        return handler.callback === callback && handler.this === thisArg\n      })\n\n      if (index > -1) {\n        handlers.splice(index, 1) // in-place, no need to re-set in Map\n\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Emit an event, triggering its handlers.\n   *\n   * @param {String} event - Name of the event\n   * @param {Object} args - Arguments for the event handler\n   * @returns {Number|Boolean} - Number of handlers triggered, `false` if event has no handlers\n   */\n  emit (event, ...args) {\n    const handlers = this._eventHandlers.get(event)\n\n    if (handlers && handlers.length) {\n      return handlers.reduce((emitted, handler) => {\n        handler.callback.apply(handler.this, args)\n        return ++emitted\n      }, 0)\n    }\n\n    return false\n  }\n}\n","import EventEmitter from './EventEmitter'\n\n/**\n * This is a base class for tiles.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class BaseTile extends EventEmitter {\n  /* eslint-disable no-multi-spaces */\n\n  /**\n   * Tile state.\n   *\n   * @typedef TileState\n   * @property {Number} layer\n   * @property {Number} col\n   * @property {Number} row\n   */\n\n  /**\n   * Tile information.\n   *\n   * @typedef TileInfo\n   * @property {Number} id\n   * @property {String} name\n   * @property {String} component\n   */\n\n  /**\n   * Static Tile information.\n   *\n   * @return {TileInfo}\n   */\n  static info () {}\n\n  /**\n   * @param {Object} config - BaseTile component config\n   * @param {Number} config.id - Tile ID\n   * @param {String} config.name - Tile name\n   * @param {String} config.component - UI component name\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    super()\n\n    this.id        = config.id\n    this.name      = config.name\n    this.component = config.component\n\n    // other\n    this._state    = {}\n    this._closed   = true\n    this.debug     = config.debug || false\n  }\n\n  /**\n   * Get current Tile state.\n   *\n   * @return {TileState}\n   */\n  getState () {\n    return this._state\n  }\n\n  /**\n   * Set new Tile state, or part of it.\n   *\n   * @param {TileState} newState\n   */\n  setState (newState) {\n    Object.assign(this._state, newState)\n  }\n\n  /**\n   * Open the tile UI menu.\n   *\n   * @param {BaseElement} component - Custom web component DOM element\n   * @param {Object} state - Current tile state\n   * @returns {Boolean} - Success of opening\n   */\n  open (component, state) {\n    this.setState(state)\n    this._attachHandlers(component)\n    component.classList.remove('hide')\n    this._closed = false\n\n    return true\n  }\n\n  /**\n   * Update the tile UI menu.\n   *\n   * @param {BaseElement} component - Custom web component DOM element\n   * @return {Boolean} - Success of updating\n   */\n  update (component) {\n    return true\n  }\n\n  /**\n   * Close the tile UI menu.\n   *\n   * @param {BaseElement} component - Custom web component DOM element\n   * @returns {Object} - Current Tile state\n   */\n  close (component) {\n    this._detachHandlers(component)\n    component.classList.add('hide')\n    this._closed = true\n\n    return this.getState()\n  }\n\n  /**\n   * Check if tile UI menu is currently open.\n   *\n   * @returns {Boolean}\n   */\n  isOpen () {\n    return !this._closed\n  }\n\n  /**\n   * Attach event handlers to wrap specific events.\n   *\n   * @param {BaseElement} component - Custom web component DOM element\n   */\n  _attachHandlers (component) {}\n\n  /**\n   * Detach event handlers of wrapped events.\n   *\n   * @param {BaseElement} component - Custom web component DOM element\n   */\n  _detachHandlers (component) {}\n}\n","import BaseTile from '../../engine/BaseTile.js'\n\n/**\n * Base Building logic.\n *\n * @extends BaseTile\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class BaseBuilding extends BaseTile {\n  /* eslint-disable no-multi-spaces, one-var */\n\n  /**\n   * @typedef {TileState} BuildingState\n   * @property {Number} workers - Number of workers assigned to this building\n   * @property {Number} begin - Production begin time\n   * @property {Number} end - Production end time\n   * @property {Number} previousTimestamp - Previous production check timestamp\n   * @property {Number} paused - Production status\n   */\n\n  /**\n   * Building UI icon object definition.\n   *\n   * @typedef BuildingIcon\n   * @property {String} image - Icon sprite image relative path\n   * @property {Number} x - Icon position on the sprite\n   * @property {Number} y - Icon position on the sprite\n   */\n\n  /**\n   * Building information.\n   *\n   * @typedef {TileInfo} BuildingInfo\n   * @property {Resources} cost\n   * @property {Resources} production\n   * @property {Number} time\n   * @property {BuildingIcon} icon\n   * @property {Number} maxWorkers\n   */\n\n  /**\n   * Static Building information.\n   *\n   * @return {BuildingInfo}\n   */\n  static info () {}\n\n  /**\n   * @param {Object} config - BaseBuilding component configuration\n   * @param {Resources} config.cost - Resources cost to build\n   * @param {Resources} config.production - Building production\n   * @param {Number} config.time - Production time (int, s)\n   * @param {BuildingIcon} config.icon - Icon sprite and position, for UI icon of this building\n   * @param {Number} config.maxWorkers - Maximum number of workers in this building\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    super(config)\n\n    this.cost               = config.cost\n    this.production         = config.production\n    this.time               = config.time * 1000\n    this.icon               = config.icon\n    this.begin              = Date.now()\n    this.end                = this.begin + this.time\n    this._previousTimestamp = 0\n    this.paused             = false\n    this.workers            = 0\n    this.maxWorkers         = config.maxWorkers || 0\n    this.pause() // start paused because 0 workers\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @return {TileState & BuildingState}\n   */\n  getState () {\n    return {\n      ...super.getState(),\n      workers: this.workers,\n      begin: this.begin,\n      end: this.end,\n      previousTimestamp: this._previousTimestamp,\n      paused: this.paused\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @param {TileState & BuildingState} newState\n   */\n  setState (newState) {\n    super.setState(newState)\n    this.workers = newState.workers || this.workers\n    this.begin = newState.begin || this.begin\n    this.end = newState.end || this.end\n    this._previousTimestamp = newState.previousTimestamp || this._previousTimestamp\n    this.paused = newState.paused || this.paused\n  }\n\n  /**\n   * Reset current production progress.\n   *\n   * @param {Boolean} [pause=false] - Whether to pause or not the production after reset\n   */\n  reset (pause = false) {\n    this.begin = Date.now()\n    this.end = this.begin + this.time\n    this.paused = pause ? this.begin : false\n  }\n\n  /**\n   * Pause current production progress.\n   */\n  pause () {\n    if (!this.paused) {\n      this.paused = Date.now()\n    }\n  }\n\n  /**\n   * Resume production progress.\n   */\n  resume () {\n    if (this.paused) {\n      this.end += Date.now() - this.paused\n      this.paused = false\n    }\n  }\n\n  /**\n   * Check if production is ready and produce.\n   *\n   * @param {Number} timestamp - Time since start (int, ms)\n   * @returns {Resources|Boolean} - Resource production, or `false` if not ready\n   */\n  produce (timestamp) {\n    if (this._previousTimestamp === 0) {\n      this._previousTimestamp = timestamp\n    }\n\n    if (!this.paused && this.workers > 0 && (this.begin + (timestamp - this._previousTimestamp)) > this.end) {\n      this.reset()\n      this._previousTimestamp = timestamp\n\n      return this.production\n    }\n\n    return false\n  }\n\n  /**\n   * Get this building's cost to build.\n   *\n   * @returns {Resources}\n   */\n  getCost () {\n    return this.cost\n  }\n\n  /**\n   * Assign a worker to the building.\n   *\n   * @return {Boolean} - Success of assignment\n   */\n  assignWorker () {\n    if (this.workers < this.maxWorkers) {\n      if (this.workers === 0) {\n        this.resume()\n      }\n\n      this.workers++\n\n      return true\n    }\n\n    return false\n  }\n\n  /**\n   * Remove a worker from the building.\n   *\n   * @return {Boolean} - Success of removal\n   */\n  removeWorker () {\n    if (this.workers > 0) {\n      this.workers--\n\n      if (this.workers === 0) {\n        this.pause()\n      }\n\n      return true\n    }\n\n    return false\n  }\n}\n","import BaseBuilding from './BaseBuilding.js'\n\n/**\n * Logic for the Field building.\n *\n * @extends BaseBuilding\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class FieldTile extends BaseBuilding {\n  /**\n   * @inheritDoc\n   */\n  static info () {\n    return {\n      id: 112,\n      name: 'Field',\n      component: 'building-panel',\n      cost: { food: 10, wood: 20 },\n      production: { food: 50 },\n      time: 10, // TODO: increase after testing\n      maxWorkers: 1,\n      icon: {\n        image: '/static/tileset.png',\n        x: -(128 * 3),\n        y: -(128 * 6)\n      }\n    }\n  }\n\n  /**\n   * @param {Object} config - GrassTile component config\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    // deep-clone info to prevent changing the default from\n    // an instance by reference (child objects)\n    const info = JSON.parse(JSON.stringify(FieldTile.info()))\n    super(Object.assign(info, config))\n  }\n\n  /**\n   * @inheritDoc\n   */\n  open (component, state) {\n    component.update({\n      name: this.name,\n      picture: '', // TODO: put in `info()`\n      description: 'A farming field to produce food for your population',\n      information: [\n        'produces 50 food'\n      ],\n      abilities: [],\n      workers: this.workers,\n      maxWorkers: this.maxWorkers\n    })\n\n    return super.open(component, state)\n  }\n\n  /**\n   * @inheritDoc\n   */\n  update (component) {\n    component.update({\n      name: this.name,\n      picture: '', // TODO: put in `info()`\n      description: 'A farming field to produce food for your population',\n      information: [\n        'produces 50 food'\n      ],\n      abilities: [],\n      workers: this.workers,\n      maxWorkers: this.maxWorkers\n    })\n\n    return super.update(component)\n  }\n\n  /**\n   * @inheritDoc\n   */\n  close (component) {\n    return super.close(component)\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _attachHandlers (component) {\n    component.addEventListener('menu:close', this._handleClose.bind(this))\n    component.addEventListener('menu:add-worker', this._handleAddWorker.bind(this))\n    component.addEventListener('menu:remove-worker', this._handleRemoveWorker.bind(this))\n    component.addEventListener('menu:ability', this._handleAbility.bind(this))\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _detachHandlers (component) {\n    component.removeEventListener('menu:close', this._handleClose.bind(this))\n    component.removeEventListener('menu:add-worker', this._handleAddWorker.bind(this))\n    component.removeEventListener('menu:remove-worker', this._handleRemoveWorker.bind(this))\n    component.removeEventListener('menu:ability', this._handleAbility.bind(this))\n  }\n\n  /**\n   * Handle close menu event.\n   *\n   * @param {CustomEvent} event\n   * @listens BuildingPanel#event:menu-close\n   * @fires FieldTile#tile-close\n   * @private\n   */\n  _handleClose (event) {\n    event.stopPropagation()\n\n    /**\n     * @event FieldTile#tile-close\n     * @type Object\n     * @property {BuildingState} state - Current Building state\n     */\n    this.emit('tile:close', {\n      state: this.getState()\n    })\n  }\n\n  /**\n   * Handle worker add button.\n   *\n   * @param {CustomEvent} event\n   * @listens BuildingPanel#event:menu-add-worker\n   * @fires BaseBuilding#building-add-worker\n   * @private\n   */\n  _handleAddWorker (event) {\n    event.stopPropagation()\n\n    /**\n     * @event BaseBuilding#building-add-worker\n     * @type Object\n     * @property {BaseBuilding} building - Building instance\n     */\n    this.emit('building:add-worker', {\n      building: this\n    })\n  }\n\n  /**\n   * Handle worker remove button.\n   *\n   * @param {CustomEvent} event\n   * @listens BuildingPanel#event:menu-remove-worker\n   * @fires BaseBuilding#building-remove-worker\n   * @private\n   */\n  _handleRemoveWorker (event) {\n    event.stopPropagation()\n\n    /**\n     * @event BaseBuilding#building-remove-worker\n     * @type Object\n     * @property {BaseBuilding} building - Building instance\n     */\n    this.emit('building:remove-worker', {\n      building: this\n    })\n  }\n\n  /**\n   * Handle ability button.\n   *\n   * @param {CustomEvent} event\n   * @param {BuildingAbility} event.detail - Ability info\n   * @listens BuildingPanel#event:menu-ability\n   * @fires FieldTile#building-ability\n   * @private\n   */\n  _handleAbility (event) {\n    event.stopPropagation()\n\n    /**\n     * @event FieldTile#building-ability\n     * @type Object\n     * @property {BuildingAbility} ability\n     */\n    this.emit('building:ability', {\n      ability: event.detail\n    })\n  }\n}\n","import GrassTile from './GrassTile.js'\nimport FieldTile from './FieldTile.js'\n\n/**\n * Instantiate one for each tile class.\n * This is where tile singletons are created.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\n\nconst Grass = new GrassTile({ debug: true })\nconst Field = new FieldTile({ debug: true })\n\nexport { Grass, Field }\n","import BaseTile from '../../engine/BaseTile.js'\nimport FieldTile from './FieldTile.js'\n\n/**\n * Logic for grass tile.\n *\n * @extends BaseTile\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class GrassTile extends BaseTile {\n  /* eslint-disable no-multi-spaces, one-var */\n\n  /**\n   * @inheritDoc\n   */\n  static info () {\n    return {\n      id: 1,\n      name: 'Grass',\n      component: 'buildings-menu'\n    }\n  }\n\n  /**\n   * @param {Object} config - GrassTile component config\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    // deep-clone info to prevent changing the default from\n    // an instance by reference (child objects)\n    const info = JSON.parse(JSON.stringify(GrassTile.info()))\n    super(Object.assign(info, config))\n\n    // init menu items\n    /** @type Array<BaseBuilding.> */\n    this.menuItems = [\n      FieldTile // idx: 0\n    ]\n  }\n\n  /**\n   * @inheritDoc\n   */\n  open (component, state) {\n    component.update(this.menuItems)\n    return super.open(component, state)\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _attachHandlers (component) {\n    component.addEventListener('menu:close', this._handleClose.bind(this))\n    component.addEventListener('menu:build', this._handleBuild.bind(this))\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _detachHandlers (component) {\n    component.removeEventListener('menu:close', this._handleClose.bind(this))\n    component.removeEventListener('menu:build', this._handleBuild.bind(this))\n  }\n\n  /**\n   * Handle close menu event.\n   *\n   * @param {CustomEvent} event\n   * @listens BuildingsMenu#event:menu-close\n   * @fires BaseTile#tile-close\n   * @private\n   */\n  _handleClose (event) {\n    event.stopPropagation()\n\n    /**\n     * @event BaseTile#tile-close\n     * @type Object\n     * @property {TileState} state - Current Tile state\n     */\n    this.emit('tile:close', {\n      state: this.getState()\n    })\n  }\n\n  /**\n   * Handle build button event.\n   *\n   * @param {CustomEvent} event\n   * @param {BaseBuilding.} event.detail - Building class definition\n   * @listens BuildingsMenu#event:menu-build\n   * @fires GrassTile#tile-build\n   * @private\n   */\n  _handleBuild (event) {\n    event.stopPropagation()\n\n    /**\n     * @event GrassTile#tile-build\n     * @type Object\n     * @property {BaseBuilding.} building - Class definition of clicked building\n     * @property {TileState} state - Current Tile state\n     */\n    this.emit('tile:build', {\n      Building: event.detail,\n      state: this.getState()\n    })\n  }\n}\n","/**\n * This component stores the current game state.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class State {\n  /* eslint-disable no-multi-spaces, one-var */\n\n  /**\n   * @param {Object} config - State component config\n   * @param {Number} config.layers - Map layers (int)\n   * @param {Number} config.rows - Map rows (int)\n   * @param {Number} config.cols - Map columns (int)\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    // dimensions related\n    this.layers   = config.layers\n    this.rows     = config.rows\n    this.cols     = config.cols\n\n    // other\n    this.stateMap = []\n    this.debug    = config.debug || false\n\n    this._initStates()\n\n    if (this.debug) {\n      console.log(`[STATE] created map (${this.layers} x ${this.cols} x ${this.rows} cells)`)\n    }\n  }\n\n  /**\n   * Initializes the map with default states.\n   * Each state knows his layer, column and row.\n   *\n   * @private\n   */\n  _initStates () {\n    let r = 0, c = 0\n\n    for (let l = 0; l < this.layers; l++) {\n      this.stateMap[l] = []\n\n      for (r = 0; r < this.rows; r++) {\n        this.stateMap[l][r] = []\n\n        for (c = 0; c < this.cols; c++) {\n          this.stateMap[l][r].push({\n            layer: l,\n            col: c,\n            row: r\n          })\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the current state of a tile.\n   *\n   * @param {Number} layer - 0-indexed tile layer (int)\n   * @param {Number} col - 0-indexed tile column (int)\n   * @param {Number} row - 0-indexed tile row (int)\n   * @returns {TileState|BuildingState} - Tile state\n   */\n  getTileState (layer, col, row) {\n    return this.stateMap[layer][row][col]\n  }\n\n  /**\n   * Set the current (updated) state of a tile.\n   *\n   * @param {TileState|BuildingState} state - New tile state\n   * @param {Number} layer - 0-indexed tile layer (int)\n   * @param {Number} col - 0-indexed tile column (int)\n   * @param {Number} row - 0-indexed tile row (int)\n   */\n  setTileState (state, layer, col, row) {\n    this.stateMap[layer][row][col] = state\n  }\n\n  /**\n   * Save current state to `localStorage`.\n   */\n  save () {}\n\n  /**\n   * Load current state from `localStorage`.\n   */\n  load () {}\n}\n","import { ConsoleExtra } from '../utils.js'\n\nconst console = ConsoleExtra(window.console)\n\n/**\n * This component handles viewport movement and drawing.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class Viewport {\n  /* eslint-disable no-multi-spaces */\n\n  /**\n   * @param {Object} config - Viewport component config\n   * @param {HTMLCanvasElement} config.canvas - HTML canvas element to be used as viewport\n   * @param {Number} config.width - Canvas width (int, px)\n   * @param {Number} config.height - Canvas height (int, px)\n   * @param {Number} config.worldWidth - World width as a boundary, origin at (0,0) is assumed (int, px)\n   * @param {Number} config.worldHeight - World height as a boundary, origin at (0,0) is assumed (int, px)\n   * @param {Number} [config.startX=0] - Starting X position (int, px)\n   * @param {Number} [config.startY=0] - Starting Y position (int, px)\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    // viewport related\n    this.canvas       = config.canvas\n    this.context      = config.canvas.getContext('2d')\n    this.width        = config.width\n    this.height       = config.height\n    this.worldWidth   = config.worldWidth\n    this.worldHeight  = config.worldHeight\n    this.offsetX      = config.startX || 0\n    this.offsetY      = config.startY || 0\n\n    // other\n    this.debug        = config.debug || false\n\n    // ensure canvas style (`World` will trigger a resize)\n    this.canvas.style.zIndex = '0'\n\n    // clamp start\n    this.offsetX = Math.min(this.offsetX, this.worldWidth - this.width)\n    this.offsetY = Math.min(this.offsetY, this.worldHeight - this.height)\n\n    if (this.debug && (config.startX !== this.offsetX || config.startY !== this.offsetY)) {\n      console.log(`[VIEWPORT] clamping starting position: ${this.offsetX} | ${this.offsetY}`)\n    }\n  }\n\n  /**\n   * Move the viewport.\n   *\n   * @param {Number} offsetX - Distance on the X axis (int, px)\n   * @param {Number} offsetY - Distance on the Y axis (int, px)\n   */\n  move ([offsetX, offsetY]) {\n    // move viewport\n    this.offsetX += offsetX\n    this.offsetY += offsetY\n\n    // clamp values\n    this.offsetX = Math.max(0, Math.min(this.worldWidth - this.width, this.offsetX))\n    this.offsetY = Math.max(0, Math.min(this.worldHeight - this.height, this.offsetY))\n  }\n\n  /**\n   * Draw visible part of a canvas on the Viewport canvas.\n   *\n   * @param {HTMLCanvasElement} source - Source canvas for drawing\n   */\n  draw (source) {\n    this.context.drawImage(\n      source,       // source context\n      this.offsetX, // source X\n      this.offsetY, // source Y\n      this.width,   // source width\n      this.height,  // source height\n      0,            // target X\n      0,            // target Y\n      this.width,   // target width\n      this.height   // target height\n    )\n  }\n\n  /**\n   * Clear viewport canvas.\n   */\n  clear () {\n    this.context.clearRect(0, 0, this.width, this.height)\n  }\n\n  /**\n   * Get current viewport rectangle.\n   *\n   * @param {Number|Boolean} [tileSize=false] - `false` for pixels, or the size of a single tile for cols/rows\n   * @returns {Number[]} - Top-left and bottom-right corners coordinates [x1, y1, x2, y2], or visible cols/rows [staCol, endCol, staRow, endRow]\n   */\n  getRect (tileSize = false) {\n    if (!tileSize) {\n      return [\n        this.offsetX,\n        this.offsetY,\n        this.offsetX + this.width,\n        this.offsetY + this.height\n      ]\n    }\n\n    // first and last visible columns and rows (-1 is because pixels are 1-indexed, but coords are 0-indexed)\n    const startCol  = this.offsetX / tileSize | 0\n    const endCol    = (this.width + this.offsetX - 1) / tileSize | 0\n    const startRow  = this.offsetY / tileSize | 0\n    const endRow    = (this.height + this.offsetY - 1) / tileSize | 0\n\n    return [startCol, endCol, startRow, endRow]\n  }\n\n  /**\n   * Convert viewport-relative coordinates to world-relative.\n   *\n   * @param {Number} x - Position on the X axis (int, px)\n   * @param {Number} y - Position on the Y axis (int, px)\n   * @param {Number|Boolean} [tileSize=false] - `false` for pixels, or the size of a single tile for cols/rows\n   * @returns {Number[]} - Coordinates relative to world; column/row if `tileSize` is given\n   */\n  canvasToWorldPosition (x, y, tileSize = false) {\n    const offsetX = x + this.offsetX\n    const offsetY = y + this.offsetY\n\n    if (!tileSize) {\n      return [offsetX, offsetY]\n    }\n\n    const col = offsetX / tileSize | 0\n    const row = offsetY / tileSize | 0\n\n    return [col, row]\n  }\n\n  /**\n   * Convert world-relative coordinates to viewport-relative.\n   *\n   * @param {Number} x - Position on the X axis (int, px)\n   * @param {Number} y - Position on the Y axis (int, px)\n   * @param {Number|Boolean} [tileSize=false] - `false` for pixels, or the size of a single tile for cols/rows\n   * @returns {Number[]} - Coordinates relative to viewport; column/row if `tileSize` is given\n   */\n  worldToCanvasPosition (x, y, tileSize = false) {\n    const offsetX = x - this.offsetX\n    const offsetY = y - this.offsetY\n\n    if (!tileSize) {\n      return [offsetX, offsetY]\n    }\n\n    const col = offsetX / tileSize | 0\n    const row = offsetY / tileSize | 0\n\n    return [col, row]\n  }\n\n  /**\n   * Resize the canvas.\n   *\n   * @param {Number} width - New width (int, px)\n   * @param {Number} height - New height (int, px)\n   */\n  resize (width, height) {\n    if (this.debug) {\n      console.throttle(1000).log(`[VIEWPORT] setting size: ${width} x ${height} px`)\n    }\n\n    this.width = width\n    this.height = height\n    this.canvas.width = width\n    this.canvas.height = height\n\n    // clamp position\n    this.offsetX = Math.min(this.offsetX, this.worldWidth - this.width)\n    this.offsetY = Math.min(this.offsetY, this.worldHeight - this.height)\n  }\n}\n","/**\n * A queue to use for event updates.\n *\n * REMOVE: deprecated and unused\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class EventQueue {\n  /* eslint-disable no-multi-spaces */\n\n  /**\n   * @param {Object} [config= {}] - BaseInput component config\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config = {}) {\n    this._events  = []\n\n    // other\n    this.debug    = config.debug || false\n  }\n\n  /**\n   * Add an event to the end of the queue.\n   *\n   * @param {String} name - Event name\n   * @param {Object} data - Event data\n   */\n  add (name, data) {\n    this._events.push({\n      ...data,\n      name\n    })\n  }\n\n  /**\n   * Remove and return the first event in queue.\n   *\n   * @returns {Object}\n   */\n  get () {\n    return this._events.shift()\n  }\n\n  /**\n   * Find the first event that satisfies the\n   * provided testing function.\n   *\n   * @see Array.prototype.find\n   * @param {Function} callback\n   * @return {Object}\n   */\n  find (callback) {\n    return this._events.find(callback)\n  }\n\n  /**\n   * Create a new array with all events that\n   * satisfy the provided testing function.\n   *\n   * @see Array.prototype.filter\n   * @param {Function} callback\n   * @return {Object[]}\n   */\n  findAll (callback) {\n    return this._events.filter(callback)\n  }\n}\n","import EventQueue from './EventQueue.js'\n\n/**\n * This component handles a single layer of\n * the game map, from rendering to events.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class Layer {\n  /* eslint-disable no-multi-spaces, one-var */\n\n  /**\n   * @param {Object} config - Layer component config\n   * @param {Number} config.level - Level of this layer in the map, 0-indexed (int)\n   * @param {Number[][]} config.map - Layer map represented as a 2-dimensional array of tile IDs (int)\n   * @param {Tileset} config.tileset - {@link Tileset} component instance, source for draws\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    this.level        = config.level\n    this.tileMap      = config.map\n    this.tileset      = config.tileset\n\n    // other\n    this.canvas       = null\n    /** @type CanvasRenderingContext2D */\n    this.context      = null\n    this.queue        = new EventQueue()\n    this._dirty       = true\n    this.selectedTile = null\n    this.debug        = config.debug || false // debug mode\n  }\n\n  /**\n   * Initialize Layer.\n   * Create an off-canvas to draw the layer on.\n   */\n  init () {\n    // initialize layer canvas\n    const [width, height] = this.getSize(true)\n\n    this.canvas = document.createElement('canvas')\n    this.canvas.width = width\n    this.canvas.height = height\n    this.context = this.canvas.getContext('2d')\n\n    this.draw() // initial render\n  }\n\n  /**\n   * Draw the current layer map to off-canvas.\n   * Does nothing if the map has not changed.\n   */\n  draw () {\n    // re-draw if changed\n    if (this._dirty) {\n      if (this.debug) {\n        console.log(`[LAYER] [${this.level}] drawing (${this.getSize(true).join(' x ')} px, ${this.getSize().join(' x ')} cells)`)\n      }\n\n      const [cols, rows] = this.getSize()\n      const [tileSetCols] = this.tileset.getSize()\n      const tileSize = this.tileset.tileSize\n      let c = 0, tileID = 0, x = 0, y = 0, srcX = 0, srcY = 0\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\n      for (let r = 0; r < rows; r++) {\n        for (c = 0; c < cols; c++) {\n          tileID = this.getTileID(c, r)\n\n          if (tileID > 0) {\n            x = c * tileSize\n            y = r * tileSize\n            srcX = ((tileID - 1) % tileSetCols) * tileSize\n            srcY = ((tileID - 1) / tileSetCols | 0) * tileSize\n\n            this.context.drawImage(\n              this.tileset.canvas,  // source\n              srcX,                 // source X\n              srcY,                 // source Y\n              tileSize,             // source width\n              tileSize,             // source height\n              x,                    // target X\n              y,                    // target Y\n              tileSize,             // target width\n              tileSize              // target height\n            )\n\n            // draw stroke around selected tile\n            if (this.selectedTile !== null && this.selectedTile[0] === c && this.selectedTile[1] === r) {\n              this.context.strokeStyle = 'orange'\n              this.context.lineWidth = 10\n              // adjust the stroke to be inside the tile\n              this.context.strokeRect(x + 5, y + 5, tileSize - 10, tileSize - 10)\n              this.context.strokeStyle = 'white'\n              this.context.lineWidth = 1\n            }\n          }\n        }\n      }\n\n      this._dirty = false\n    }\n  }\n\n  /**\n   * Update the layer state.\n   *\n   * @param {Number} delta - Time since last update (int, ms)\n   * @param {Number} timestamp - Time since start (int, ms)\n   */\n  update (delta, timestamp) {}\n\n  /**\n   * Get the layer size.\n   *\n   * @param {Boolean} pixel - Whether you want size in tiles or pixels\n   * @returns {Number[]} - Width and height of the layer\n   */\n  getSize (pixel = false) {\n    return [\n      this.tileMap[0].length * (pixel ? this.tileset.tileSize : 1),\n      this.tileMap.length * (pixel ? this.tileset.tileSize : 1)\n    ]\n  }\n\n  /**\n   * Get the current ID of a tile.\n   *\n   * @param {Number} col - 0-indexed tile column (int)\n   * @param {Number} row - 0-indexed tile row (int)\n   * @returns {Number} - ID of the tile in the required position\n   */\n  getTileID (col, row) {\n    return this.tileMap[row][col]\n  }\n\n  /**\n   * Set the current ID of a tile.\n   *\n   * @param {Number} tileID - New tile ID\n   * @param {Number} col - 0-indexed tile col (int)\n   * @param {Number} row - 0-indexed tile row (int)\n   */\n  setTileID (tileID, col, row) {\n    this.tileMap[row][col] = tileID\n    this._dirty = true\n  }\n\n  /**\n   * Select a tile to show as stroked.\n   *\n   * @param {Number} col\n   * @param {Number} row\n   */\n  setSelection (col, row) {\n    this.selectedTile = [col, row]\n    this._dirty = true\n  }\n\n  /**\n   * Clear current selected tile.\n   */\n  clearSelection () {\n    if (this.selectedTile !== null) {\n      this._dirty = true\n    }\n\n    this.selectedTile = null\n  }\n}\n","/**\n * This is a base class for input devices.\n *\n * @interface\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class BaseInput {\n  /**\n   * @param {Object} config - BaseInput component config\n   * @param {Number} config.speed - Movement speed (float, px per time step)\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    this.speed = config.speed\n\n    // other\n    this.debug = config.debug || 0\n  }\n\n  /**\n   * Get current movement direction.\n   *\n   * Override this method to return current\n   * movement direction with different input\n   * devices:\n   *\n   * ```\n   * +-------------------+\n   * |  X = -1  |  left  |\n   * |  X = +1  |  right |\n   * |----------+--------|\n   * |  Y = -1  |  up    |\n   * |  Y = +1  |  down  |\n   * +-------------------+\n   * ```\n   *\n   * @returns {Number[]} - Direction on both axes (int)\n   */\n  getDirection () {}\n\n  /**\n   * Check if the user is moving.\n   *\n   * @returns {Boolean}\n   */\n  isMoving () {\n    const [x, y] = this.getDirection()\n\n    return x !== 0 || y !== 0\n  }\n\n  /**\n   * Get distance traveled.\n   *\n   * @param {Number} delta - Time elapsed (int, ms)\n   * @returns {Number[]} - Distance traveled on both axes (int, px)\n   */\n  getDistance (delta) {\n    const [x, y] = this.getDirection()\n\n    return [\n      x * delta * this.speed | 0,\n      y * delta * this.speed | 0\n    ]\n  }\n}\n","import BaseInput from './BaseInput.js'\n\n/**\n * This component implements {@link BaseInput} for keyboard devices.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class Keyboard extends BaseInput {\n  /* eslint-disable no-multi-spaces, one-var */\n\n  /** @static */\n  static get LEFT ()  { return 37 }\n\n  /** @static */\n  static get UP ()    { return 38 }\n\n  /** @static */\n  static get RIGHT () { return 39 }\n\n  /** @static */\n  static get DOWN ()  { return 40 }\n\n  /**\n   * @param {Object} config - Keyboard component config\n   */\n  constructor (config) {\n    super(config)\n\n    const listeners = [\n      Keyboard.LEFT,\n      Keyboard.RIGHT,\n      Keyboard.UP,\n      Keyboard.DOWN\n    ]\n    this._keys = {}\n    this._initListeners(listeners)\n\n    if (this.debug) {\n      console.log(`[KEYBOARD] listeners attached (${listeners.join(' ')}, keydown and keyup)`)\n    }\n  }\n\n  /**\n   * Initialize event listeners.\n   *\n   * @param {Number[]} keyCodes - Array of key codes to keep track of\n   * @private\n   */\n  _initListeners (keyCodes) {\n    window.addEventListener('keydown', this._onKeyDown.bind(this))\n    window.addEventListener('keyup', this._onKeyUp.bind(this))\n\n    keyCodes.forEach((keyCode) => { this._keys[keyCode] = false })\n  }\n\n  /**\n   * Press a key.\n   *\n   * @param {KeyboardEvent} event\n   * @listens Document#keydown\n   * @private\n   */\n  _onKeyDown (event) {\n    const keyCode = event.keyCode\n\n    if (keyCode in this._keys) {\n      event.preventDefault()\n      this._keys[keyCode] = true\n    }\n  }\n\n  /**\n   * Release a key.\n   *\n   * @param {KeyboardEvent} event\n   * @listens Document#keyup\n   * @private\n   */\n  _onKeyUp (event) {\n    const keyCode = event.keyCode\n\n    if (keyCode in this._keys) {\n      event.preventDefault()\n      this._keys[keyCode] = false\n    }\n  }\n\n  /**\n   * Check if a specific key is currently pressed.\n   *\n   * @param {Number} keyCode - Key code to check for\n   * @returns {Boolean}\n   * @private\n   */\n  _isDown (keyCode) {\n    if (keyCode in this._keys) {\n      return this._keys[keyCode]\n    }\n\n    if (this.debug) {\n      console.warn(`[KEYBOARD] requested status of keycode ${keyCode}, which we're not listening to`)\n    }\n\n    return false\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDirection () {\n    let x = 0, y = 0\n\n    if (this._isDown(Keyboard.LEFT))  { x = -1 }\n    if (this._isDown(Keyboard.RIGHT)) { x = 1 }\n    if (this._isDown(Keyboard.UP))    { y = -1 }\n    if (this._isDown(Keyboard.DOWN))  { y = 1 }\n\n    return [x, y]\n  }\n}\n","import BaseInput from './BaseInput.js'\n\n/**\n * This component implements {@link BaseInput} for touch devices.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class Touch extends BaseInput {\n  /* eslint-disable no-multi-spaces, one-var */\n\n  /**\n   * @param {Object} config - Touch component config\n   */\n  constructor (config) {\n    super(config)\n\n    this.startX       = -1\n    this.startY       = -1\n    this.currX        = -1\n    this.currY        = -1\n    this.endX         = -1\n    this.endY         = -1\n\n    this._initListeners()\n\n    if (this.debug) {\n      console.log(`[TOUCH] listeners attached (touchstart, touchmove, touchend and touchcancel)`)\n    }\n  }\n\n  /**\n   * Initialize event listeners.\n   *\n   * @private\n   */\n  _initListeners () {\n    // Chrome and Firefox set `passive` to `true` on some elements\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Improving_scrolling_performance_with_passive_listeners\n    window.addEventListener('touchstart', this._onTouchStart.bind(this), { passive: false })\n    window.addEventListener('touchmove', this._onTouchMove.bind(this), { passive: false })\n    window.addEventListener('touchend', this._onTouchEnd.bind(this))\n    window.addEventListener('touchcancel', this._onTouchCancel.bind(this))\n  }\n\n  /**\n   * Initializes `start` and `curr` properties.\n   *\n   * @param {TouchEvent} event\n   * @private\n   */\n  _onTouchStart (event) {\n    this.startX = this.currX = event.touches[0].pageX - event.touches[0].target.offsetLeft\n    this.startY = this.currY = event.touches[0].pageY - event.touches[0].target.offsetTop\n  }\n\n  /**\n   * Keep `curr` properties updated on position change.\n   *\n   * @param {TouchEvent} event\n   * @private\n   */\n  _onTouchMove (event) {\n    this.currX = event.touches[0].pageX - event.touches[0].target.offsetLeft\n    this.currY = event.touches[0].pageY - event.touches[0].target.offsetTop\n  }\n\n  /**\n   * Initializes `end` and updates `curr` properties.\n   *\n   * @param {TouchEvent} event\n   * @private\n   */\n  _onTouchEnd (event) {\n    this.endX = this.currX = event.changedTouches[0].pageX - event.changedTouches[0].target.offsetLeft\n    this.endY = this.currY = event.changedTouches[0].pageY - event.changedTouches[0].target.offsetTop\n\n    // set start to stop movement\n    this.startX = this.endX\n    this.startY = this.endY\n  }\n\n  /**\n   * Called in certain situations, like the finger went off the screen.\n   * Same behavior as `Touch._onTouchEnd()`.\n   *\n   * @param {TouchEvent} event\n   * @private\n   */\n  _onTouchCancel (event) {\n    this.endX = this.currX = event.changedTouches[0].pageX - event.changedTouches[0].target.offsetLeft\n    this.endY = this.currY = event.changedTouches[0].pageY - event.changedTouches[0].target.offsetTop\n\n    // set start to stop movement\n    this.startX = this.endX\n    this.startY = this.endY\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDirection () {\n    let x = 0, y = 0\n    const deltaX = this.currX - this.startX\n    const deltaY = this.currY - this.startY\n\n    if (deltaX > 0) { x = -1 } // left\n    if (deltaX < 0) { x = 1 }  // right\n    if (deltaY > 0) { y = -1 } // up\n    if (deltaY < 0) { y = 1 }  // down\n\n    return [x, y]\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDistance (delta) {\n    const x = this.startX - this.currX\n    this.startX = this.currX\n\n    const y = this.startY - this.currY\n    this.startY = this.currY\n\n    return [x, y]\n  }\n}\n","/**\n * This component represent a tileset and its properties.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class Tileset {\n  /* eslint-disable no-multi-spaces */\n\n  /**\n   * @param {Object} config - Engine component configuration\n   * @param {String} config.key - Key of the tileset, used for cache\n   * @param {String} config.path - Relative path of the tileset, used for loading\n   * @param {Loader} config.loader - {@link Loader} component instance, to pre-load and cache images\n   * @param {Number[]} config.size - Size of the tileset, in columns and rows (int)\n   * @param {Number} config.tileSize - Size of a single tile of the Tileset (int, px)\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    this.key      = config.key\n    this.source   = config.path\n    this.loader   = config.loader\n    this.size     = config.size\n    this.tileSize = config.tileSize\n\n    // other\n    this.canvas   = null\n    this.context  = null\n    this.debug    = config.debug || false\n  }\n\n  /**\n   * Load the tileset image in an off-canvas.\n   *\n   * @returns {Promise<String>} - Cache key of the loaded image\n   */\n  load () {\n    return this._initImage()\n      .then((key) => {\n        this._initCanvas()\n\n        return key\n      })\n  }\n\n  /**\n   * Load the image in DOM.\n   *\n   * @returns {Promise<String>}\n   * @private\n   */\n  _initImage () {\n    return this.loader.loadImage(this.key, this.source)\n  }\n\n  /**\n   * Create the canvas and draw the image on it.\n   *\n   * @private\n   */\n  _initCanvas () {\n    const [width, height] = this.getSize(true)\n    const image = this.loader.getImage(this.key)\n\n    this.canvas = document.createElement('canvas')\n    this.canvas.width = width\n    this.canvas.height = height\n    this.context = this.canvas.getContext('2d')\n    this.context.drawImage(image, 0, 0)\n\n    if (this.debug) {\n      console.log(`[TILESET] [${this.key}] drawn (${this.getSize(true).join(' x ')} px, ${this.getSize().join(' x ')} cells)`)\n    }\n  }\n\n  /**\n   * Get the tileset size.\n   *\n   * @param {Boolean} pixel - Whether you want size in tiles or pixels\n   * @returns {Number[]} - Width and height of the tileset\n   */\n  getSize (pixel = false) {\n    return [\n      this.size[0] * (pixel ? this.tileSize : 1),\n      this.size[1] * (pixel ? this.tileSize : 1)\n    ]\n  }\n}\n","import EventEmitter from './EventEmitter.js'\n\n/**\n * This component handles DOM-based game UI.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class UI extends EventEmitter {\n  /* eslint-disable no-multi-spaces, one-var */\n\n  /**\n   * @param {Object} config - UI component configuration\n   * @param {HTMLElement} config.element - HTML UI element\n   * @param {Map<String,BaseElement>} config.components - All games HTML UI custom elements\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    super()\n\n    this.element          = config.element\n    this.components       = config.components\n\n    // other\n    /** @type {BaseTile|BaseBuilding|null} */\n    this.currentTile      = null // current tile UI component\n    /** @type {BaseElement|null} */\n    this.currentComponent = null // current custom component\n    this.debug            = config.debug || false\n\n    // init UI components\n    for (const component of this.components.values()) {\n      component.debug = this.debug\n      component.classList.add('hide')\n      this.element.appendChild(component)\n    }\n\n    // ensure z-index\n    this.element.style.zIndex = '1'\n    this.element.addEventListener('click', this._onClick.bind(this), false)\n  }\n\n  /**\n   * Handle UI root element clicks, emitting an event with coordinates.\n   *\n   * @param {MouseEvent} event\n   * @listens Element#click\n   * @fires UI#ui-click\n   * @private\n   */\n  _onClick (event) {\n    event.preventDefault()\n    event.stopPropagation()\n    /**\n     * @event UI#ui-click\n     * @type Array\n     * @property {Number} 0 - X position\n     * @property {Number} 1 - Y position\n     */\n    this.emit('ui:click', [event.layerX, event.layerY])\n  }\n\n  /**\n   * Check if a component is mounted.\n   *\n   * @return {Boolean}\n   */\n  isMounted () {\n    return this.currentTile !== null && this.currentComponent !== null\n  }\n\n  /**\n   * Open an UI component.\n   * Only one component can be open at a time.\n   *\n   * @param {BaseTile} tile - Tile implementing UI logic\n   * @param {Object} state - Current Tile state\n   * @return {Boolean} - Success of opening\n   * @fires UI#ui-open\n   */\n  open (tile, state) {\n    if (this.isMounted()) {\n      return false\n    }\n\n    if (!this.components.has(tile.component)) {\n      console.warn(`[UI] component '${tile.component}' not found`)\n      return false\n    }\n\n    if (this.debug) {\n      console.log(`[UI] mounting component:`, tile.name)\n    }\n\n    this.currentComponent = this.components.get(tile.component)\n    this.currentTile = tile\n    this.currentTile.on('tile:close', this._handleComponentClose, this)\n\n    if (this.debug) {\n      console.log(`[UI] opening component:`, this.currentTile.name)\n    }\n\n    if (!this.currentTile.open(this.currentComponent, state)) {\n      return false\n    }\n\n    /**\n     * @event UI#ui-open\n     * @type Object\n     * @property {BaseTile} tile - Tile instance\n     */\n    this.emit('ui:open', {\n      tile: this.currentTile\n    })\n\n    return true\n  }\n\n  /**\n   * Update an UI component.\n   */\n  update () {\n    this.currentTile.update(this.currentComponent)\n  }\n\n  /**\n   * Close an UI component.\n   *\n   * @return {Object|Boolean} - Updated Tile state, or `false` on error\n   * @fires UI#ui-close\n   */\n  close () {\n    if (!this.isMounted()) {\n      return false\n    }\n\n    if (this.debug) {\n      console.log(`[UI] closing component:`, this.currentTile.name)\n    }\n\n    const newState = this.currentTile.close(this.currentComponent)\n    /**\n     * @event UI#ui-close\n     * @type Object\n     * @property {TileState|BuildingState} state - Current Tile state\n     * @property {BaseTile} tile - Tile instance\n     */\n    this.emit('ui:close', {\n      state: newState,\n      tile: this.currentTile\n    })\n\n    if (this.debug) {\n      console.log(`[UI] unmounting component:`, this.currentTile.name)\n    }\n\n    this.currentTile.off('tile:close', this._handleComponentClose, this)\n    this.currentTile = null\n    this.currentComponent = null\n\n    return true\n  }\n\n  /**\n   * Handle component close event.\n   *\n   * @param {Object} event\n   * @param {TileState|BuildingState} event.state - Current Tile state\n   * @listens BaseTile#event:tile-close\n   * @fires UI#ui-close\n   * @private\n   */\n  _handleComponentClose (event) {\n    this.close()\n  }\n}\n","/**\n * Pre-loads images asynchronously.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class Loader {\n  /**\n   *\n   * @param {Object} config - Loader component config\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    this._images = {}\n\n    // other\n    this.debug = config.debug || false\n  }\n\n  /**\n   * Load an image in DOM.\n   *\n   * @param {String} key - Image key for caching\n   * @param {String} src - Image source path/URL\n   * @return {Promise<String>} - Cache key of the loaded image\n   */\n  loadImage (key, src) {\n    const that = this\n    const img = new window.Image()\n    const p = new Promise((resolve, reject) => {\n      img.addEventListener('load', () => {\n        if (that.debug) {\n          console.log(`[LOADER] loaded image ${src}`)\n        }\n\n        that._images[key] = img\n        resolve(key)\n      })\n\n      img.addEventListener('error', () => {\n        reject(new Error(`[LOADER] could not load image ${src}`))\n      })\n    })\n\n    img.src = src\n\n    return p\n  }\n\n  /**\n   * Get a loaded image.\n   *\n   * @param {String} key - Image key in cache\n   * @return {Image|null}\n   */\n  getImage (key) {\n    return (key in this._images) ? this._images[key] : null\n  }\n}\n","import Loader from './Loader'\n\n/**\n * This component manages everything concerning the game world.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class BaseWorld {\n  /* eslint-disable no-multi-spaces, one-var, key-spacing */\n\n  /**\n   * @param {Object} config - BaseWorld component config\n   * @param {HTMLElement} config.container - Top hierarchy container element\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    this.container  = config.container\n\n    // other\n    this.debug      = config.debug || false\n    this.loader = new Loader({ debug: this.debug })\n  }\n\n  /**\n   * Pre-load tiles in promises.\n   *\n   * @returns {Promise<String>[]}\n   */\n  load () {}\n\n  /**\n   * Initialize components.\n   */\n  init () {}\n\n  /**\n   * Update the world state.\n   *\n   * @param {Number} delta - Time since last update (int, ms)\n   * @param {Number} timestamp - Time since start (int, ms)\n   */\n  update (delta, timestamp) {}\n\n  /**\n   * Draw visible parts to viewport.\n   */\n  draw () {}\n\n  /**\n   * Resize the HTML container.\n   * Trigger resizing of `Viewport`.\n   *\n   * @param {Number} width - New width (int, px)\n   * @param {Number} height - New height (int, px)\n   */\n  resize (width, height) {}\n}\n","import EventEmitter from '../engine/EventEmitter.js'\n\n/**\n * Logic for the City, production and management.\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class City extends EventEmitter {\n  /* eslint-disable no-multi-spaces, one-var */\n\n  /**\n   * Game resources.\n   *\n   * @typedef Resources\n   * @property {Number} [food]\n   * @property {Number} [wood]\n   * @property {Number} [rock]\n   */\n\n  /**\n   * City information.\n   *\n   * @typedef CityInfo\n   * @property {Resources} resources\n   * @property {Number} workers\n   * @property {Number} population\n   */\n\n  /**\n   * @param {Object} config - City component configuration\n   * @param {UI} config.ui - {@link UI} component instance\n   * @param {Resources} config.resources - Initial resources\n   * @param {Number} config.population - Initial population (int)\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    super(config)\n\n    this.ui         = config.ui\n    this.resources  = config.resources || { food: 100, wood: 100, rock: 100 }\n    this.population = config.population\n    this.workers    = 0\n    /** @type {Array<BaseBuilding>} */\n    this.buildings  = []\n    this.element    = this._initHeader()\n\n    // other\n    this.debug      = config.debug || false\n  }\n\n  /**\n   * Initialize header HTML component.\n   *\n   * @returns {BaseElement} - The HTML component\n   * @private\n   */\n  _initHeader () {\n    /** @type {BaseElement} */\n    const elem = this.ui.components.get('city-header')\n    elem.init({\n      resources: this.resources,\n      workers: this.workers,\n      population: this.population\n    })\n    elem.classList.remove('hide')\n\n    return elem\n  }\n\n  /**\n   * Add a building to the City.\n   *\n   * Validates the building cost.\n   *\n   * @param {BaseBuilding.} Building - Class definition of the Building to check and add\n   * @param {Number[]} position\n   * @param {Number} position[0] - Map layer\n   * @param {Number} position[1] - Map column\n   * @param {Number} position[2] - Map row\n   * @returns {BaseBuilding|Boolean} - Created building instance, or `false` if couldn't build\n   */\n  build (Building, position) {\n    const cost = Building.info().cost\n\n    if (this.spend(cost)) {\n      const building = new Building({ debug: this.debug })\n\n      building.setState({\n        layer: position[0],\n        col: position[1],\n        row: position[2]\n      })\n\n      if (this.debug) {\n        console.log(`[CITY] building '${building.name}' in position ${position[1]} | ${position[2]} (${position[0]})`)\n      }\n\n      this.buildings.push(building)\n\n      return building\n    }\n\n    return false\n  }\n\n  /**\n   * Trigger production of all City buildings.\n   * Produced resources are added to the City stash.\n   *\n   * @param {Number} timestamp - Time since start (int, ms)\n   * @returns {Resources} - Total production, already added to City stash\n   */\n  production (timestamp) {\n    const total = this.buildings.reduce((production, building) => {\n      const produced = building.produce(timestamp)\n\n      if (produced) {\n        for (const resource of Object.keys(produced)) {\n          production[resource] += produced[resource]\n        }\n      }\n\n      return production\n    }, { food: 0, wood: 0, rock: 0 })\n\n    // check if any resource was produced\n    if (Object.keys(total).filter((key) => total[key] > 0).length > 0) {\n      if (this.debug) {\n        console.log(`[CITY] production:`, total)\n      }\n\n      this.gain(total)\n    }\n\n    return total\n  }\n\n  /**\n   * Check if the City can afford spending an amount of resources.\n   *\n   * @param {Resources} amount - Can be one or more resources\n   * @returns {Boolean}\n   */\n  canAfford (amount) {\n    let affordable = true\n\n    for (const resource of Object.keys(amount)) {\n      if (this.resources[resource] < amount[resource]) {\n        affordable = false\n        break\n      }\n    }\n\n    return affordable\n  }\n\n  /**\n   * Spend an amount of City resources.\n   *\n   * @param {Resources} amount - Can be one or more resources\n   * @returns {Boolean} - `false` if the City can't afford the amount of resources\n   */\n  spend (amount) {\n    if (!this.canAfford(amount)) {\n      return false\n    }\n\n    for (const resource of Object.keys(amount)) {\n      this.resources[resource] -= amount[resource]\n    }\n\n    this.updateHeader()\n\n    return true\n  }\n\n  /**\n   * Add an amount of resources to the City stash.\n   *\n   * @param {Resources} amount - Can be one or more resources\n   */\n  gain (amount) {\n    for (const resource of Object.keys(amount)) {\n      if (amount[resource] > 0) {\n        this.resources[resource] += amount[resource]\n      }\n    }\n\n    this.updateHeader()\n  }\n\n  /**\n   * Get a City's building at some specific position, if available.\n   *\n   * @param {Number} layer\n   * @param {Number} col\n   * @param {Number} row\n   */\n  getBuildingAt (layer, col, row) {\n    let bInfo = null\n\n    return this.buildings.find((building) => {\n      bInfo = building.getState()\n      return bInfo.layer === layer && bInfo.col === col && bInfo.row === row\n    })\n  }\n\n  /**\n   * Assign a worker to a building.\n   *\n   * @param {BaseBuilding} building\n   * @return {Boolean} - Success of assignment\n   */\n  assignWorker (building) {\n    if (this.population <= this.workers) {\n      return false\n    }\n\n    if (building.assignWorker()) {\n      this.workers++\n      this.updateHeader()\n\n      return true\n    }\n\n    return false\n  }\n\n  /**\n   * Remove a worker from a building.\n   *\n   * @param {BaseBuilding} building\n   * @return {Boolean} - Success of removal\n   */\n  removeWorker (building) {\n    if (building.removeWorker()) {\n      this.workers--\n      this.updateHeader()\n\n      return true\n    }\n\n    return false\n  }\n\n  /**\n   * Update the City header UI component.\n   */\n  updateHeader () {\n    this.element.update({\n      resources: this.resources,\n      workers: this.workers,\n      population: this.population\n    })\n  }\n}\n","import State from '../engine/State.js'\nimport Viewport from '../engine/Viewport.js'\nimport Layer from '../engine/Layer.js'\nimport Keyboard from '../engine/Keyboard.js'\nimport Touch from '../engine/Touch.js'\nimport Tileset from '../engine/Tileset.js'\nimport UI from '../engine/UI.js'\nimport { ConsoleExtra } from '../utils.js'\nimport BaseWorld from '../engine/BaseWorld.js'\nimport City from './City.js'\nimport { map, tilesets, keyboard, touch, state, ui, viewport, tiles } from './config.js'\n\nconst console = ConsoleExtra(window.console)\n\n/**\n * World implementation.\n *\n * @extends BaseWorld\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class World extends BaseWorld {\n  /* eslint-disable no-multi-spaces, one-var, key-spacing */\n\n  /**\n   * @param {Object} config - World component config\n   * @param {HTMLElement} config.container - Top hierarchy container element\n   * @param {Boolean} [config.debug=false] - Debug mode\n   */\n  constructor (config) {\n    super(config)\n\n    // components related\n    this.map        = map\n    this.tilesets   = tilesets.map((tileset) => new Tileset({\n      ...tileset,\n      loader: this.loader\n    }))\n    this.input      = [\n      new Keyboard(keyboard),\n      new Touch(touch)\n    ]\n    this.state      = new State({\n      ...state,\n      layers: this.map.length,\n      rows: this.map[0].length,\n      cols: this.map[0][0].length\n    })\n    this.layers     = this.map.map((layerMap, index) => new Layer({\n      debug: this.debug,\n      level: index,\n      map: layerMap,\n      tileset: this.tilesets[index] || this.tilesets[0]\n    }))\n\n    const [width, height] = this.layers[0].getSize(true) // use first layer size as world size\n    this.viewport   = new Viewport({\n      ...viewport,\n      worldWidth: width,\n      worldHeight: height\n    })\n    this.ui         = new UI(ui)\n\n    // other\n    this.tiles    = tiles\n    this.city = new City({\n      root: this.ui.element,\n      population: 5,\n      resources: { food: 100, wood: 100, rock: 100 },\n      ui: this.ui,\n      debug: true\n    })\n\n    // ensure container style\n    this.resize(this.viewport.width, this.viewport.height)\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load () {\n    return this.tilesets.map((tileset) => tileset.load())\n  }\n\n  /**\n   * @inheritDoc\n   */\n  init () {\n    window.addEventListener('resize', this._handleResize.bind(this))\n\n    this.layers.forEach((layer) => layer.init())\n    this.ui.on('ui:click', this._handleUIClick, this)\n    this.ui.on('ui:open', this._handleUIOpen, this)\n    this.ui.on('ui:close', this._handleUIClose, this)\n  }\n\n  /**\n   * @inheritDoc\n   */\n  update (delta, timestamp) {\n    for (const input of this.input) {\n      if (input.isMoving()) {\n        this.viewport.move(input.getDistance(delta))\n        break\n      }\n    }\n\n    this.layers.forEach((layer) => layer.update(delta, timestamp))\n    this.city.production(timestamp)\n  }\n\n  /**\n   * @inheritDoc\n   */\n  draw () {\n    // clear frame\n    this.viewport.clear()\n\n    for (let l = 0; l < this.layers.length; l++) {\n      this.layers[l].draw() // draws only if changed\n      this.viewport.draw(this.layers[l].canvas)\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  resize (width, height) {\n    if (this.debug) {\n      console.throttle(1000).log(`[WORLD] setting size: ${width} x ${height} px`)\n    }\n\n    this.container.style.width = `${width}px`\n    this.container.style.height = `${height}px`\n    this.viewport.resize(width, height)\n  }\n\n  /**\n   * Handle UI clicks.\n   * This retrieves Tile instance and State, before mounting the component\n   * on the UI layer.\n   *\n   * @param {Number[]} event\n   * @param {Number} event[0] - X pixel coordinate\n   * @param {Number} event[1] - Y pixel coordinate\n   * @listens UI#event:ui-click\n   * @private\n   */\n  _handleUIClick ([x, y]) {\n    // use first tileset for tile size\n    const [col, row] = this.viewport.canvasToWorldPosition(x, y, this.tilesets[0].tileSize)\n    let tileID = 0, tileInstance = null\n\n    for (let l = this.layers.length - 1; l >= 0; l--) {\n      tileID = this.layers[l].getTileID(col, row)\n\n      // skip empty tiles\n      if (tileID > 0) {\n        tileInstance = this.city.getBuildingAt(l, col, row) || this.tiles.get(tileID)\n\n        if (tileInstance) {\n          if (this.debug) {\n            console.log(`[WORLD] handling component for tile ${tileID}, clicked at ${col} | ${row} (${l})`)\n          }\n\n          if (this.ui.isMounted()) {\n            this.ui.close()\n          }\n\n          this.ui.open(tileInstance, this.state.getTileState(l, col, row))\n        } else {\n          console.warn(`[WORLD] no instance defined for tile ID ${tileID}`)\n        }\n\n        break\n      }\n    }\n  }\n\n  /**\n   * Handle opening of a new component, attaching event listeners.\n   *\n   * @param {Object} event\n   * @param {BaseTile} event.tile - Current Tile instance\n   * @listens UI#event:ui-open\n   * @private\n   */\n  _handleUIOpen ({ tile }) {\n    const tState = tile.getState()\n    this.layers[tState.layer].setSelection(tState.col, tState.row)\n    tile.on('tile:build', this._handleTileBuild, this)\n    tile.on('building:add-worker', this._handleBuildingAddWorker, this)\n    tile.on('building:remove-worker', this._handleBuildingRemoveWorker, this)\n    tile.on('building:ability', this._handleBuildingAbility, this)\n  }\n\n  /**\n   * Handle closing of the current component, detaching event listeners.\n   *\n   * @param {Object} event\n   * @param {BaseTile} event.tile - Current Tile instance\n   * @listens UI#event:ui-close\n   * @private\n   */\n  _handleUIClose ({ tile }) {\n    const tState = tile.getState()\n    this.layers[tState.layer].clearSelection()\n    tile.off('tile:build', this._handleTileBuild, this)\n    tile.off('building:add-worker', this._handleBuildingAddWorker, this)\n    tile.off('building:remove-worker', this._handleBuildingRemoveWorker, this)\n    tile.off('building:ability', this._handleBuildingAbility, this)\n  }\n\n  /**\n   * Handle Tile build request.\n   *\n   * @param {Object} event\n   * @param {BaseBuilding.} event.Building - Building class definition\n   * @param {TileState} event.state - Current Tile state\n   * @listens GrassTile#event:tile-build\n   * @private\n   */\n  _handleTileBuild ({ Building, state }) {\n    const building = this.city.build(Building, [state.layer, state.col, state.row])\n\n    if (building) {\n      const bState = building.getState()\n      this.state.setTileState(bState, bState.layer, bState.col, bState.row)\n      this.layers[state.layer].setTileID(building.id, bState.col, bState.row)\n      this.ui.close()\n    }\n  }\n\n  /**\n   * Handle Building request to add a worker.\n   *\n   * @param {Object} event\n   * @param {BaseBuilding} event.building\n   * @listens BaseBuilding#event:building-add-worker\n   * @private\n   */\n  _handleBuildingAddWorker ({ building }) {\n    if (this.city.assignWorker(building)) {\n      if (this.debug) {\n        console.log(`[WORLD] assigned worker to building: ${building.name}`)\n      }\n\n      const bState = building.getState()\n      this.state.setTileState(bState, bState.layer, bState.col, bState.row)\n      this.ui.update()\n    }\n  }\n\n  /**\n   * Handle Building request to remove worker.\n   *\n   * @param {Object} event\n   * @param {BaseBuilding} event.building\n   * @listens BaseBuilding#event:building-remove-worker\n   * @private\n   */\n  _handleBuildingRemoveWorker ({ building }) {\n    if (this.city.removeWorker(building)) {\n      if (this.debug) {\n        console.log(`[WORLD] removed worker from building: ${building.name}`)\n      }\n\n      const bState = building.getState()\n      this.state.setTileState(bState, bState.layer, bState.col, bState.row)\n      this.ui.update()\n    }\n  }\n\n  _handleBuildingAbility () {}\n\n  /**\n   * Handle window resizing.\n   *\n   * @listens window#resize\n   * @private\n   */\n  _handleResize () {\n    const width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\n    const height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n\n    this.resize(width, height)\n  }\n}\n","/* global HTMLElement */\n\n/**\n * This is the base class for custom web elements.\n *\n * Override the following methods:\n * - `constructor()`, to attach the shadow root\n * - `init()`, to initialize the element inner DOM\n * - `update()`, to update the element inner DOM\n *\n * The custom element must be registered after class definition:\n * ```js\n * try {\n *   window.customElements.define('my-custom-element', MyCustomElement)\n * } catch (e) {\n *   console.error(`Custom elements not supported by the browser!`)\n * }\n * ```\n *\n * @author Leo Mainardi <mainardi.leo@gmail.com>\n * @license MIT\n */\nexport default class BaseElement extends HTMLElement {\n  constructor () {\n    super()\n\n    this.debug = false\n  }\n\n  /**\n   * Create dynamic parts of the component template.\n   *\n   * @param {*} data - Data used by the component to build the template\n   */\n  init (data) {}\n\n  /**\n   * Update dynamic parts of the component template.\n   *\n   * @param {*} data - Data used by the component to update the template\n   */\n  update (data) {}\n}\n","import BaseElement from '../../engine/BaseElement.js'\n\nclass CityHeader extends BaseElement {\n  constructor () {\n    super()\n\n    this.attachShadow({ mode: 'open' })\n    const template = document.getElementById('city-header-template')\n    const templateClone = template.content.cloneNode(true)\n    this.shadowRoot.appendChild(templateClone)\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @param {CityInfo} info\n   */\n  init (info) {\n    const list = this.shadowRoot.querySelector('.resources')\n\n    // clear all\n    while (list.lastChild) {\n      list.removeChild(list.lastChild)\n    }\n\n    for (const res of Object.keys(info.resources)) {\n      const resource = document.createElement('div')\n      resource.classList.add(res)\n\n      const icon = document.createElement('span')\n      icon.classList.add('icon')\n      icon.innerText = res.charAt(0).toUpperCase()\n      resource.appendChild(icon)\n\n      const value = document.createElement('span')\n      value.classList.add('value')\n      value.innerText = `${info.resources[res]}`\n      resource.appendChild(value)\n\n      list.appendChild(resource)\n    }\n\n    const workers = this.shadowRoot.querySelector('.population .workers')\n    workers.innerText = info.workers\n\n    const population = this.shadowRoot.querySelector('.population .total')\n    population.innerText = info.population\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @param {CityInfo} info\n   */\n  update (info) {\n    for (const res of Object.keys(info.resources)) {\n      const elem = this.shadowRoot.querySelector(`.${res} .value`)\n\n      if (!elem) {\n        console.warn(`[COMPONENT][resources-header] No UI element for resource ${res}. Did you declare it with init() ?`)\n        continue\n      }\n\n      elem.innerText = `${info.resources[res]}` // cast to string\n    }\n\n    const workers = this.shadowRoot.querySelector('.population .workers')\n    workers.innerText = info.workers\n\n    const population = this.shadowRoot.querySelector('.population .total')\n    population.innerText = info.population\n  }\n}\n\ntry {\n  window.customElements.define('city-header', CityHeader)\n} catch (e) {\n  console.error(`Custom elements not supported by the browser!`)\n}\n","import BaseElement from '../../engine/BaseElement.js'\n\nclass BuildingsMenu extends BaseElement {\n  /**\n   * Create the element and attach the shadow root.\n   */\n  constructor () {\n    super()\n\n    this._handlers = new Map()\n\n    // attach shadow root\n    this.attachShadow({ mode: 'open' })\n    const template = document.getElementById('buildings-template')\n    const templateClone = template.content.cloneNode(true)\n    this.shadowRoot.appendChild(templateClone)\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @param {Array<BaseBuilding.>} buildings - Buildings classes definitions\n   * @fires BuildingsMenu#menu-close\n   * @fires BuildingsMenu#menu-build\n   */\n  init (buildings) {\n    // block click on component from reaching game canvas\n    this._handlers.set(this.shadowRoot, (event) => event.stopPropagation())\n\n    /**\n     * @event BuildingsMenu#menu-close\n     * @type CustomEvent\n     */\n    this._handlers.set(this.shadowRoot.querySelector('.navigation .close'), (event) => {\n      if (this.debug) {\n        console.log(`[MENU][buildings] closing menu`)\n      }\n\n      event.stopPropagation()\n      this.dispatchEvent(new CustomEvent('menu:close'))\n    })\n\n    const list = this.shadowRoot.querySelector('.menu .list')\n\n    // clear all\n    while (list.lastChild) {\n      list.removeChild(list.lastChild)\n    }\n\n    // init building list (capital letter because it's a constructor)\n    for (const Building of buildings) {\n      const bInfo = Building.info()\n\n      const listItem = document.createElement('li')\n      listItem.classList.add('list-item')\n\n      const card = document.createElement('div')\n      card.classList.add('click', 'card')\n      /**\n       * @event BuildingsMenu#menu-build\n       * @type CustomEvent\n       * @property {BaseBuilding.} detail - Class definition of clicked building\n       */\n      this._handlers.set(card, (event) => {\n        if (this.debug) {\n          console.log(`[MENU][buildings] clicked building:`, bInfo.name)\n        }\n\n        event.stopPropagation()\n        this.dispatchEvent(new CustomEvent('menu:build', { detail: Building }))\n      })\n      listItem.appendChild(card)\n\n      const cardHeader = document.createElement('div')\n      cardHeader.classList.add('card-header', 'size-3')\n      cardHeader.innerText = bInfo.name\n      card.appendChild(cardHeader)\n\n      const cardBody = document.createElement('div')\n      cardBody.classList.add('card-body')\n      card.appendChild(cardBody)\n\n      const icon = document.createElement('div')\n      icon.style.display = 'inline-block'\n      icon.style.width = '128px'\n      icon.style.height = '128px'\n      icon.style.background = `url(${bInfo.icon.image})`\n      icon.style.backgroundPosition = `${bInfo.icon.x}px ${bInfo.icon.y}px`\n      cardBody.appendChild(icon)\n\n      const cardFooter = document.createElement('div')\n      cardFooter.classList.add('card-footer')\n      card.appendChild(cardFooter)\n\n      const resources = document.createElement('div')\n      resources.classList.add('resources', 'invert')\n      cardFooter.appendChild(resources)\n\n      // init building cost\n      for (const res of Object.keys(bInfo.cost)) {\n        const elem = document.createElement('div')\n        elem.classList.add(res)\n\n        const icon = document.createElement('span')\n        icon.classList.add('icon')\n        icon.innerText = res.charAt(0).toUpperCase()\n        elem.appendChild(icon)\n\n        const value = document.createElement('span')\n        value.classList.add('value', 'size-4')\n        value.innerText = `${bInfo.cost[res]}`\n        elem.appendChild(value)\n\n        resources.appendChild(elem)\n      }\n\n      list.appendChild(listItem)\n    }\n\n    this._attachHandlers()\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @param {Array<BaseBuilding.>} buildings - Buildings classes definitions\n   */\n  update (buildings) {\n    this._detachHandlers()\n    this._handlers.clear()\n    this.init(buildings)\n  }\n\n  /**\n   * Attach event handlers to their elements.\n   *\n   * @private\n   */\n  _attachHandlers () {\n    for (const [element, handler] of this._handlers) {\n      element.addEventListener('click', handler)\n    }\n  }\n\n  /**\n   * Detach event handlers from their elements.\n   *\n   * @private\n   */\n  _detachHandlers () {\n    for (const [element, handler] of this._handlers) {\n      element.removeEventListener('click', handler)\n    }\n  }\n}\n\ntry {\n  window.customElements.define('buildings-menu', BuildingsMenu)\n} catch (e) {\n  console.error(`Custom elements not supported by the browser!`)\n}\n","import BaseElement from '../../engine/BaseElement.js'\n\nclass BuildingPanel extends BaseElement {\n  /**\n   * @typedef BuildingInfo\n   * @property {String} name\n   * @property {String} picture - Relative path\n   * @property {String} description\n   * @property {String[]} [information] - Bullet points of information\n   * @property {Array<BuildingAbility>} [abilities]\n   * @property {Number} [workers]\n   * @property {Number} [maxWorkers]\n   */\n\n  /**\n   * @typedef BuildingAbility\n   * @property {String} name - Unique ability name\n   * @property {String} icon - Relative path to image\n   * @property {String} text - Ability description\n   */\n\n  /**\n   * Create the element and attach the shadow root.\n   */\n  constructor () {\n    super()\n\n    this._handlers = new Map()\n\n    // attach shadow root\n    this.attachShadow({ mode: 'open' })\n    const template = document.getElementById('building-template')\n    const templateClone = template.content.cloneNode(true)\n    this.shadowRoot.appendChild(templateClone)\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @param {BuildingInfo} info - Information of this building\n   * @fires BuildingPanel#menu-close\n   * @fires BuildingPanel#menu-ability\n   * @fires BuildingPanel#menu-add-worker\n   * @fires BuildingPanel#menu-remove-worker\n   */\n  init (info) {\n    // block click on component from reaching game canvas\n    this._handlers.set(this.shadowRoot, (event) => event.stopPropagation())\n\n    /**\n     * @event BuildingPanel#menu-close\n     * @type CustomEvent\n     */\n    this._handlers.set(this.shadowRoot.querySelector('.navigation .close'), (event) => {\n      if (this.debug) {\n        console.log(`[MENU][building info] closing menu`)\n      }\n\n      event.stopPropagation()\n      this.dispatchEvent(new CustomEvent('menu:close'))\n    })\n\n    const name = this.shadowRoot.querySelector('.title.name')\n    name.innerText = info.name\n\n    const picture = this.shadowRoot.querySelector('.img.picture')\n    picture.src = info.picture\n\n    const description = this.shadowRoot.querySelector('.content.description')\n    description.innerText = info.description\n\n    const information = this.shadowRoot.querySelector('.info ul')\n\n    // clear all\n    while (information.lastChild) {\n      information.removeChild(information.lastChild)\n    }\n\n    for (const point of info.information) {\n      const item = document.createElement('li')\n      item.innerText = point\n      information.appendChild(item)\n    }\n\n    // show information if available\n    if (info.information.length === 0) {\n      this.shadowRoot.querySelector('.row.info').classList.add('hide')\n    } else {\n      this.shadowRoot.querySelector('.row.info').classList.remove('hide')\n    }\n\n    const abilities = this.shadowRoot.querySelector('.abilities .content')\n\n    // clear all\n    while (abilities.lastChild) {\n      abilities.removeChild(abilities.lastChild)\n    }\n\n    for (const ability of info.abilities) {\n      const elem = document.createElement('div')\n      elem.classList.add('item', 'click')\n\n      /**\n       * @event BuildingPanel#menu-ability\n       * @type CustomEvent\n       * @property {BuildingAbility} details\n       */\n      this._handlers.set(elem, (event) => {\n        if (this.debug) {\n          console.log(`[MENU][building info] using ability: ${ability.name}`)\n        }\n\n        event.stopPropagation()\n        this.dispatchEvent(new CustomEvent('menu:ability', { detail: ability }))\n      })\n\n      const icon = document.createElement('img')\n      icon.src = ability.icon\n      icon.classList.add('icon')\n      elem.appendChild(icon)\n\n      const text = document.createElement('span')\n      text.innerText = ability.text\n      text.classList.add('text')\n      elem.appendChild(text)\n\n      abilities.appendChild(elem)\n    }\n\n    // show abilities if available\n    if (info.abilities.length === 0) {\n      this.shadowRoot.querySelector('.abilities').classList.add('hide')\n    } else {\n      this.shadowRoot.querySelector('.abilities').classList.remove('hide')\n    }\n\n    // show workers if available\n    if (info.maxWorkers > 0) {\n      /**\n       * @event BuildingPanel#menu-add-worker\n       * @type CustomEvent\n       */\n      this._handlers.set(this.shadowRoot.querySelector('.workers .add'), (event) => {\n        if (this.debug) {\n          console.log(`[MENU][building info] adding worker`)\n        }\n\n        event.stopPropagation()\n        this.dispatchEvent(new CustomEvent('menu:add-worker'))\n      })\n\n      const workers = this.shadowRoot.querySelector('.workers .current')\n      workers.innerText = info.workers\n\n      const maxWorkers = this.shadowRoot.querySelector('.workers .max')\n      maxWorkers.innerText = info.maxWorkers\n\n      /**\n       * @event BuildingPanel#menu-remove-worker\n       * @type CustomEvent\n       */\n      this._handlers.set(this.shadowRoot.querySelector('.workers .remove'), (event) => {\n        if (this.debug) {\n          console.log(`[MENU][building info] removing worker`)\n        }\n\n        event.stopPropagation()\n        this.dispatchEvent(new CustomEvent('menu:remove-worker'))\n      })\n    }\n\n    this._attachHandlers()\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @param {BuildingInfo} info - Information of this building\n   */\n  update (info) {\n    this._detachHandlers()\n    this._handlers.clear()\n    this.init(info)\n  }\n\n  /**\n   * Attach event handlers to their elements.\n   *\n   * @private\n   */\n  _attachHandlers () {\n    for (const [element, handler] of this._handlers) {\n      element.addEventListener('click', handler)\n    }\n  }\n\n  /**\n   * Detach event handlers from their elements.\n   *\n   * @private\n   */\n  _detachHandlers () {\n    for (const [element, handler] of this._handlers) {\n      element.removeEventListener('click', handler)\n    }\n  }\n}\n\ntry {\n  window.customElements.define('building-panel', BuildingPanel)\n} catch (e) {\n  console.error(`Custom elements not supported by the browser!`)\n}\n","import { Grass, Field } from './tiles'\nimport World from './World'\nimport './components/CityHeader.js'\nimport './components/BuildingsMenu.js'\nimport './components/BuildingPanel.js'\n\n/* eslint-disable no-multi-spaces, standard/array-bracket-even-spacing */\n\nconst width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\nconst height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n\n/* eslint-disable array-bracket-spacing */\nconst map = [\n  [\n    [  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58],\n    [  58,  76,  76,  76,  74,  73,   1,   1,   1,  38,  38,  38,   3,   3,   4,  58],\n    [  58,  76,  76,  75,  74,   1,   1,   1,   1,  37,  37,  38,   3,   4,   4,  58],\n    [  58,  76,  75,  74,  73,   1,   1,   1,   1,   1,  37,  37,  38,  38,  37,  58],\n    [  58,  74,  74,  43,   6,   6,  24,   1,   1,   1,  38,  37,  38,  37,  37,  58],\n    [  58,  73,   1,   1,   1,   1,   5,   1,   1,   1,  37,  37,  37,  38,  38,  58],\n    [  58,   1,   1,   1,   1,   1,   5,   1,   1,   1,  37,  38,  38,  37,  37,  58],\n    [  58,   1,   1,   1,   1,   1,  27,   6,   6,  25,   1,  38,  37,  37,  38,  58],\n    [  58,   1,   1,   1,   1,   1,   5,   1,   1,   1,   1,   1,  38,  38,  38,  58],\n    [  58,   1,   1,   1,   1,   1,   5,   1,   1,   1,   1,   1,   1,  37,  37,  58],\n    [  58,   1,   1,  76,   1,   1,   5,   1,   1,   1,   1,   1,   1,   1,   1,  58],\n    [  58,   1,   1,   1,   1,   1,  41,   6,   6,   6,   6,  25,   1,   1,   1,  58],\n    [  58,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,  58],\n    [  58,  22,  22,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,  58],\n    [  58,  22,  21,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,  58],\n    [  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58,  58]\n  ],\n  [\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,  17,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,  35,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,  62,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,  15,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,  33,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,  54,   0, 117,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,  62,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,  62,   0,  64,  52,   0,   0, 119,   0, 114, 115,   0,   0,   0,   0],\n    [   0,   0,   0,  63,   0,   0,   0,   0,   0,   0,   0,   0, 101,  83,   0,   0],\n    [   0,   0,   0,   0,   0,  81,  51,   0,   0,   0,   0, 116, 101, 101,   0,   0],\n    [   0,   0,   0,   0,   0,  99,  81,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]\n  ],\n  [\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,  53,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]\n  ],\n  [\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,  72,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]\n  ]\n]\n\nconst tilesets = [{\n  key: 'tiles',\n  path: 'static/tileset.png',\n  size: [18, 7],\n  tileSize: 128\n}]\n\nconst viewport = {\n  debug: true,\n  canvas: document.getElementById('canvas'),\n  width: width,\n  height: height,\n  startX: width / 2 | 0,\n  startY: height / 2 | 0\n}\n\nconst keyboard = {\n  debug: true,\n  speed: 0.512\n}\nconst touch = {\n  debug: true,\n  speed: 0.512\n}\n\nconst state = {\n  debug: true\n}\n\nconst tiles = new Map([\n  [1, Grass],\n  [112, Field]\n])\nconst components = new Map([\n  ['city-header', document.createElement('city-header')],\n  ['buildings-menu', document.createElement('buildings-menu')],\n  ['building-panel', document.createElement('building-panel')]\n])\n\nconst ui = {\n  debug: true,\n  element: document.getElementById('ui'),\n  components\n}\n\nconst engine = {\n  debug: 2,\n  updateTimeStep: 10,\n  updateTimeMax: 50,\n\n  world: new World({\n    debug: true,\n    container: document.getElementsByClassName('container')[0]\n  })\n}\n\nexport { map, tilesets, viewport, ui, keyboard, touch, state, tiles, components, engine }\n","import './css/main.css'\n\nimport Engine from './engine/Engine.js'\nimport { engine as config } from './game/config.js'\n\nconst game = new Engine(config)\n\ngame.run()\n  .then(() => {\n    console.log(`[MAIN] game has started`)\n  })\n\n// DEBUG\nconst dumpState = function (layer = null, col = null, row = null) { // eslint-disable-line no-unused-vars\n  if (layer !== null && col !== null && row !== null) {\n    console.log(`[DUMP][state] tile`, config.world.state.getTileState(layer, col, row))\n  } else {\n    console.log(`[DUMP][state] all`, config.world.state.stateMap)\n  }\n}\n\nconst dumpCity = function () { // eslint-disable-line no-unused-vars\n  console.log(`[DUMP][city] buildings`, config.world.city.buildings)\n}\n\nwindow.state = dumpState\nwindow.city = dumpCity\n\n// TEST: mount a template\nconst mount = (templateId) => {\n  if (templateId) {\n    const template = document.getElementById(templateId)\n    const rootNode = document.getElementById('ui')\n    const clone = template.content.cloneNode(true)\n    rootNode.appendChild(clone)\n  }\n}\n\n// change template ID to test a template\nmount('')\n"],"sourceRoot":""}